# Generated by Django 4.2.6 on 2023-11-21 17:46

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import games.bazarblot.fields
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Bazar",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("card", games.bazarblot.fields.CardField()),
                ("value", models.CharField()),
                ("order", models.IntegerField()),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Bazar",
                "verbose_name_plural": "Bazars",
                "db_table": "bazarblot_bazars",
                "ordering": ["-pk"],
            },
        ),
        migrations.CreateModel(
            name="Contra",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "bazar",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contra",
                        to="bazarblot.bazar",
                    ),
                ),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Contra",
                "verbose_name_plural": "Contras",
                "db_table": "bazarblot_contras",
                "ordering": ["-pk"],
            },
        ),
        migrations.CreateModel(
            name="Hand",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="The status of the board.",
                        verbose_name="Is active",
                    ),
                ),
                ("order", models.IntegerField()),
            ],
            options={
                "verbose_name": "Hand",
                "verbose_name_plural": "Hands",
                "db_table": "bazarblot_hands",
                "ordering": ["-pk"],
            },
        ),
        migrations.CreateModel(
            name="Round",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="The status of the board.",
                        verbose_name="Is active",
                    ),
                ),
                (
                    "trump_suit",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("('♧', '♣')", "C"),
                            ("('♢', '♦')", "D"),
                            ("('♡', '♥')", "H"),
                            ("('♤', '♠')", "S"),
                        ],
                        max_length=10,
                        null=True,
                    ),
                ),
                ("order", models.IntegerField()),
            ],
            options={
                "verbose_name": "Round",
                "verbose_name_plural": "Rounds",
                "db_table": "bazarblot_rounds",
                "ordering": ["-pk"],
            },
        ),
        migrations.CreateModel(
            name="Team",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("score", models.IntegerField(default=0)),
                (
                    "players",
                    models.ManyToManyField(max_length=2, to=settings.AUTH_USER_MODEL),
                ),
            ],
            options={
                "verbose_name": "Team",
                "verbose_name_plural": "Teams",
                "db_table": "bazarblot_teams",
                "ordering": ["-pk"],
            },
        ),
        migrations.CreateModel(
            name="Table",
            fields=[
                (
                    "guid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="The unique identifier of the board.",
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="GUID",
                    ),
                ),
                ("players_order", models.JSONField(blank=True, null=True)),
                (
                    "max_points",
                    models.IntegerField(
                        choices=[(151, "Small"), (301, "Medium"), (501, "Large")],
                        default=301,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="The date and time when the board was created.",
                        verbose_name="Created at",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="The date and time when the board was updated.",
                        verbose_name="Updated at",
                    ),
                ),
                (
                    "is_ended",
                    models.BooleanField(
                        default=False,
                        help_text="The status of the game.",
                        verbose_name="Is ended",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="The status of the board.",
                        verbose_name="Is active",
                    ),
                ),
                (
                    "teams",
                    models.ManyToManyField(
                        related_name="tables_teams", to="bazarblot.team"
                    ),
                ),
                (
                    "winner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="bazarblot.team"
                    ),
                ),
            ],
            options={
                "verbose_name": "Table",
                "verbose_name_plural": "Tables",
                "db_table": "bazarblot_tables",
                "ordering": ["-pk"],
            },
        ),
        migrations.CreateModel(
            name="RoundScore",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("team_one_value", models.IntegerField()),
                ("team_two_value", models.IntegerField()),
                (
                    "round",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="score",
                        to="bazarblot.round",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RoundPlayersCards",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "cards",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=games.bazarblot.fields.CardField(), size=8
                    ),
                ),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "round",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="players_cards",
                        to="bazarblot.round",
                    ),
                ),
            ],
            options={
                "verbose_name": "Players Cards",
                "verbose_name_plural": "Players Cards",
                "db_table": "bazarblot_rounds_players_cards",
                "ordering": ["-pk"],
            },
        ),
        migrations.AddField(
            model_name="round",
            name="table",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="rounds",
                to="bazarblot.table",
            ),
        ),
        migrations.CreateModel(
            name="ReContra",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "contra",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="re_contra",
                        to="bazarblot.contra",
                    ),
                ),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Re Contra",
                "verbose_name_plural": "Re Contras",
                "db_table": "bazarblot_recontras",
                "ordering": ["-pk"],
            },
        ),
        migrations.CreateModel(
            name="HandTrick",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("card", games.bazarblot.fields.CardField()),
                ("order", models.IntegerField()),
                (
                    "hand",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tricks",
                        to="bazarblot.round",
                    ),
                ),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Hand Trick",
                "verbose_name_plural": "Hand Tricks",
                "db_table": "bazarblot_hand_tricks",
                "ordering": ["-pk"],
            },
        ),
        migrations.CreateModel(
            name="HandScore",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("value", models.IntegerField()),
                (
                    "hand",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="score",
                        to="bazarblot.hand",
                    ),
                ),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="hand",
            name="round",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="hands",
                to="bazarblot.round",
            ),
        ),
        migrations.CreateModel(
            name="Combination",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("Terz", "Terz"),
                            ("Fifty", "Fifty"),
                            ("Hundred", "Hundred"),
                            ("FourCards", "Fourcards"),
                        ],
                        max_length=12,
                    ),
                ),
                (
                    "value",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=games.bazarblot.fields.CardField(), size=5
                    ),
                ),
                ("is_passed", models.BooleanField(default=True)),
                ("is_shown", models.BooleanField(default=False)),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "round",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="combinations",
                        to="bazarblot.round",
                    ),
                ),
            ],
            options={
                "verbose_name": "Combination",
                "verbose_name_plural": "Combinations",
                "db_table": "bazarblot_combinations",
                "ordering": ["-pk"],
            },
        ),
        migrations.AddField(
            model_name="bazar",
            name="round",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="bazars",
                to="bazarblot.round",
            ),
        ),
        migrations.AddConstraint(
            model_name="roundplayerscards",
            constraint=models.UniqueConstraint(
                fields=("round", "player"), name="unique_one_round_players"
            ),
        ),
        migrations.AddConstraint(
            model_name="round",
            constraint=models.UniqueConstraint(
                condition=models.Q(("is_active", True)),
                fields=("table", "is_active"),
                name="unique_one_table_round_is_active",
            ),
        ),
        migrations.AddConstraint(
            model_name="hand",
            constraint=models.UniqueConstraint(
                condition=models.Q(("is_active", True)),
                fields=("round", "is_active"),
                name="unique_one_round_hand_is_active",
            ),
        ),
    ]
